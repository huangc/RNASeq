## RNASeq is a workflow to find Differentially Expressed (DE) genes using RNS-Seq reads data.

#### Xa7 Target region:
* M5_Xa7QTL_BY in OsaChr6 is 26,752,440-26,752,775, or 27,007,346-27,007,090
* M5_56k_Xa7QTL_BY in OsaChr6 is 26,776,166-26,777,887
* M5_M5-56K in rice aus Kasalath (OsaXa7) is chr6:26,752,440..26,776,166..26,777,887..(27,007,090), Length=25,448 (or 254,651) bp.
* M5_M5-56K in rice aus Kasalath (OsaXa7) is redefined to chr6:26,625,001..27,007,500, Length=382,500 bp.
* DJ123 scaffold_10 has VERY good coverage on the Xa7QTL region
* Transfer annotaion from rice aus reference Kasalath to rice aus DJ123 scaffold_10:197,410..199,218 
* DJ123 scaffold_10 full length is 1,279,957 bp
* M5_56k_Xa7QTL_BY in DJ123_scaffold10 is 197,410-198,218; M5 could not be found in DJ123_scaffold10.
* BY_p53P5L2_IRBB7_Xa7 aligned 59,812bp (out of 62,882 bp, or 95.12%) with DJ123_scaffold10.
* BY_p53P5L2_IRBB7_Xa7 aligned 50,087bp (out of 62,882 bp, or 79.65%) with IRBB7-DJ123_scaffold10. 

#### RNA-Seq analysis
cd /projects/huangcy/MYGIT/RNASeq
source RNASeq.source

##-----------------------------------------
## Prepare targets
cd ${WORK_DIR}/targets
# copy the following fasta and embl files from either ${TRegGA_DIR}/targets or 
# ${TRegGA_DIR}/assembly/rfguided/${SYNONYM}-on-${TARGET}/EVALUATION/${SYNONYM}-${TARGET}.fa and embl to here.
TARGET="OsaXA7 IRBB7-OsaXA7 DV86-OsaXA7 IRBB62-OsaXA7 \
DJ123_scaffold10 IRBB7-DJ123_scaffold10 DV86-DJ123_scaffold10 IRBB62-DJ123_scaffold10"

##-----------------------------------------
## Generate the annotation_by_sliding_window gff file using 1-kb sliding window method, with starting position at 1 and 501 separately.
for i in ${TARGET}
do
SUBJECTNAME=${i}
SUBJECTFA=${i}.fa
SUBJECTEMBL=${i}.embl

python ../bin/annotation_by_sliding_window.py ${i}.fa 1 1000 1000 ${i}_1_1000.gtf
python ../bin/annotation_by_sliding_window.py ${i}.fa 501 1000 1000 ${i}_501_1000.gtf
SUBJECTGFF1=${i}_1_1000.gtf
SUBJECTGFF501=${i}_501_1000.gtf

done

##-------------------------------------------
## Prepare reads with TRegGA Makefile_GPR-orig
# Raw reads are here:
# /projects/huangcy/DATA/IRBB7_RNASEQ_RAW
# Rename the reads to more standard and sensible names. Take only the most distinguishing feature part as the name.
# strain [.1] (pH) containing no TALe
# Strain [.2] (pH+avrXa7) for R gene Xa7 in IRBB7
# strain [.3] (pH+Sac50) for another uncharacterized R gene in IRBB7.
# Original names: *.fq.gz
# To be compatible with the TRegGA, rename to *.fastq.gz
# L1.1-a_FCD2D8FACXX_L7_RICydfTAARAAPEI-93_1.fq.gz
# L1.1-a_FCD2D8FACXX_L7_RICydfTAARAAPEI-93_2.fq.gz
# L1.1-b_FCD2D8FACXX_L7_RICydfTABRAAPEI-94_1.fq.gz
# L1.1-b_FCD2D8FACXX_L7_RICydfTABRAAPEI-94_2.fq.gz
# L1.2_FCD2D8FACXX_L7_RICydfTACRAAPEI-109_1.fq.gz
# L1.2_FCD2D8FACXX_L7_RICydfTACRAAPEI-109_2.fq.gz
# L1.3_FCD2D8HACXX_L4_RICydfTADRAAPEI-118_1.fq.gz
# L1.3_FCD2D8HACXX_L4_RICydfTADRAAPEI-118_2.fq.gz
# L2.2_FCD2D8HACXX_L4_RICydfTAERAAPEI-126_1.fq.gz
# L2.2_FCD2D8HACXX_L4_RICydfTAERAAPEI-126_2.fq.gz
# L2.3_FCD2D8HACXX_L4_RICydfTAFRAAPEI-18_1.fq.gz
# L2.3_FCD2D8HACXX_L4_RICydfTAFRAAPEI-18_2.fq.gz

cd ${WORK_DIR}/run
mkdir -p reads
cd reads
ln -s ${RAWREAD_DIR}/L1.1-a*_1.fq.gz A1_L11a_1.fastq.gz
ln -s ${RAWREAD_DIR}/L1.1-a*_2.fq.gz A1_L11a_2.fastq.gz
ln -s ${RAWREAD_DIR}/L1.1-b*_1.fq.gz A2_L11b_1.fastq.gz
ln -s ${RAWREAD_DIR}/L1.1-b*_2.fq.gz A2_L11b_2.fastq.gz

ln -s ${RAWREAD_DIR}/L1.2*_1.fq.gz B1_L12_1.fastq.gz
ln -s ${RAWREAD_DIR}/L1.2*_2.fq.gz B1_L12_2.fastq.gz
ln -s ${RAWREAD_DIR}/L2.2*_1.fq.gz B2_L22_1.fastq.gz
ln -s ${RAWREAD_DIR}/L2.2*_2.fq.gz B2_L22_2.fastq.gz

ln -s ${RAWREAD_DIR}/L1.3*_1.fq.gz C1_L13_1.fastq.gz
ln -s ${RAWREAD_DIR}/L1.3*_2.fq.gz C1_L13_2.fastq.gz
ln -s ${RAWREAD_DIR}/L2.3*_1.fq.gz C2_L23_1.fastq.gz
ln -s ${RAWREAD_DIR}/L2.3*_2.fq.gz C2_L23_2.fastq.gz

# modify the Makefile_GPR-orig
\cp Makefile_GPR-orig Makefile_GPR-orig-orig
sed -i 's/include TRegGA.config/include RNASeq.config/;' Makefile_GPR-orig
sed -i 's/SOURCE            = ebisra/#SOURCE            = ebisra/;' Makefile_GPR-orig
sed -i 's/#SOURCE            = local/SOURCE            = local/;' Makefile_GPR-orig
# Patch the following:
else
	SAMPLE            = RNA_SAMPLE#  label used below to identify the location of the read files
        SYNONYM           = RNA_SYNONYM#  Replace LABEL with an appropriate cultivar name; here IRBB7
        FASTQDIR          = ${WORK_DIR}/run/reads
        ACCESSIONS        = RNA_ACCESSIONS#  Choice for demo2, after demo1 was run
# remove the readsasfasta step
sed -i 's/trimmedreads readsasfasta fastqca/trimmedreads fastqca/;' Makefile_GPR-orig

# submit makefile jobs
SAMPLE="A1_L11a A2_L11b B1_L12 B2_L22 C1_L13 C2_L23"
NUMPROC=4
for i in ${SAMPLE}
do
cd ${WORK_DIR}/run/reads
mkdir ${i}
cd ${i}
\cp ../Makefile_GPR-orig Makefile_GPR-${i}
sed 's/SAMPLE            = RNA_SAMPLE/SAMPLE            = IRBB7/;' Makefile_GPR-${i}
sed -i "s/SYNONYM           = RNA_SYNONYM/SYNONYM           = $i/;" Makefile_GPR-${i}
sed -i "s/ACCESSIONS        = RNA_ACCESSIONS/ACCESSIONS        = $i/;" Makefile_GPR-${i}
make -j $NUMPROC -I../ -I../../ -f Makefile_GPR-${i} >& err_${i}
done

##-----------
## run RSEM for estimating gene and isoform expression levels
cd ${WORK_DIR}/run
mkdir -p rsem
cd rsem
module add bowtie/0.12.8
module add rsem/1.2.19

SAMPLE="A1_L11a A2_L11b B1_L12 B2_L22 C1_L13 C2_L23"
# TARGET="DJ123_scaffold10 IRBB7-DJ123_scaffold10 DV86-DJ123_scaffold10 IRBB62-DJ123_scaffold10\
# OsaXA7 IRBB7-OsaXA7 DV86-OsaXA7 IRBB62-OsaXA7"
# TARGET="OsaXA7 IRBB7-OsaXA7"
TARGET="DJ123_scaffold10 IRBB7-DJ123_scaffold10"
BOWTIE_DIR=/usr/local/src/NGS-DIR/BOWTIE/bowtie
STAR_DIR=~/src/STAR/bin/Linux_x86_64
THREADS=1
SEED_LENGTH=80 #Seed length used by the read aligner.

##-----------------------------------------
#
cd ${WORK_DIR}/targets
for i in ${TARGET}
do
SUBJECTNAME=${i}
SUBJECTFA=${i}.fa
SUBJECTEMBL=${i}.embl
SUBJECTGFF1=${i}_1_1000.gtf
SUBJECTGFF501=${i}_501_1000.gtf

# prepare reference genome for Bowtie aligner
rsem-prepare-reference --gtf ${SUBJECTGFF1} --bowtie --bowtie-path ${BOWTIE_DIR} ${SUBJECTFA}  ${SUBJECTNAME}
# rsem-prepare-reference --gtf ${SUBJECTGFF501} --bowtie --bowtie-path ${BOWTIE_DIR} ${SUBJECTFA}  ${SUBJECTNAME}

# prepare reference genome for STAR aligner
# rsem-prepare-reference --gtf ${SUBJECTGFF1} --star --star-path ${STAR_DIR} ${SUBJECTFA}  ${SUBJECTNAME}
# rsem-prepare-reference --gtf ${SUBJECTGFF501} --star --star-path ${STAR_DIR} ${SUBJECTFA}  ${SUBJECTNAME}

# calculate RNA-Seq expression by RSEM
cd  ${WORK_DIR}/run/rsem
for k in ${SAMPLE}
do
# run rsem with bowtie aligner
rsem-calculate-expression --bowtie-path ${BOWTIE_DIR} --paired-end --num-threads ${THREADS} \
 --output-genome-bam --calc-ci --time --seed-length ${SEED_LENGTH} \
 ${WORK_DIR}/run/reads/${k}/${k}_1.fq ${WORK_DIR}/run/reads/${k}/${k}_2.fq \
 ${WORK_DIR}/targets/${SUBJECTNAME} ${k}-bowtie-${i} &> err_rsem_${k}-bowtie-${i} &

# BUGGY, VERY SLOW!! run rsem with STAR aligner
# rsem-calculate-expression --star --star-path ${STAR_DIR} --paired-end --num-threads ${THREADS} \
# --star-output-genome-bam --calc-ci --time --seed-length ${SEED_LENGTH} \
# ${WORK_DIR}/run/reads/${k}/${k}_1.fq ${WORK_DIR}/run/reads/${k}/${k}_2.fq \
# ${WORK_DIR}/targets/${SUBJECTNAME} ${k}-STAR-${i} &> err_rsem_${k}-STAR-${i} &

done

# wait for all jobs of one TARGET finished
wait

done


##---------------------
## EBSeq
# The RSEM that come with Mason does NOT contain EBSeq installed. Need to UNLOAD module RSEM, if loaded earlier, \
# otherwise the call for EBSeq will fail to find it.
module unload rsem/1.2.5 # Module rsem is default to version 1.2.5, which does NOT include EBSeq
module add bowtie/0.12.8 # bowtie is required for rsem installation, so it needs to be loaded before rsem
module add R/2.15.2 # R is required for EBSeq installation
export PATH=~/src/RSEM:~/src/RSEM/EBSeq:$PATH #add RSEM and EBSeq to $PATH
cd $PBS_O_WORKDIR

cd ${WORK_DIR}/run
mkdir -p ebseq
cd ebseq
\cp -s ${WORK_DIR}/run/rsem/*.results .
SAMPLE="A1_L11a A2_L11b B1_L12 B2_L22 C1_L13 C2_L23"
TARGET="DJ123_scaffold10 IRBB7-DJ123_scaffold10 DV86-DJ123_scaffold10 IRBB62-DJ123_scaffold10"
DEGROUPS="2,2"
FDR=0.05
FDRNAME=DE005

for i in ${TARGET}
do
SUBJECTNAME=${i}
SUBJECTFA=${i}.fa
SUBJECTEMBL=${i}.embl
SUBJECTGFF1=${i}_1_1000.gtf
SUBJECTGFF501=${i}_501_1000.gtf
SUBJECTRNA=${i}.transcripts.fa

GENE_GROUP_A="A1_L11a-bowtie-${i}.genes.results A2_L11b-bowtie-${i}.genes.results"
GENE_GROUP_B="B1_L12-bowtie-${i}.genes.results B2_L22-bowtie-${i}.genes.results"
GENE_GROUP_C="C1_L13-bowtie-${i}.genes.results C2_L23-bowtie-${i}.genes.results"

ISOFORM_GROUP_A="A1_L11a-bowtie-${i}.isoforms.results A2_L11b-bowtie-${i}.isoforms.results"
ISOFORM_GROUP_B="B1_L12-bowtie-${i}.isoforms.results B2_L22-bowtie-${i}.isoforms.results"
ISOFORM_GROUP_C="C1_L13-bowtie-${i}.isoforms.results C2_L23-bowtie-${i}.isoforms.results"

# rsem-generate-ngvector
rsem-generate-ngvector ${WORK_DIR}/targets/${SUBJECTRNA} EBSeq.isoform-${i}

# rsem-generate-data-matrix
# data_matrix_file is a m by n matrix. m is the number of genes/transcripts and n is the number of total samples.

# run gene level of rsem-generate-data-matrix.
rsem-generate-data-matrix ${GENE_GROUP_B} ${GENE_GROUP_A} > BvsA-on-${i}.genes.counts.matrix
rsem-generate-data-matrix ${GENE_GROUP_C} ${GENE_GROUP_A} > CvsA-on-${i}.genes.counts.matrix
rsem-generate-data-matrix ${GENE_GROUP_B} ${GENE_GROUP_C} > BvsC-on-${i}.genes.counts.matrix

## run isoform level of rsem-generate-data-matrix.
rsem-generate-data-matrix ${ISOFORM_GROUP_B} ${ISOFORM_GROUP_A} > BvsA-on-${i}.isoforms.counts.matrix
rsem-generate-data-matrix ${ISOFORM_GROUP_C} ${ISOFORM_GROUP_A} > CvsA-on-${i}.isoforms.counts.matrix
rsem-generate-data-matrix ${ISOFORM_GROUP_B} ${ISOFORM_GROUP_C} > BvsC-on-${i}.isoforms.counts.matrix

## rsem-run-ebseq
# conditions is comma-separated list of values representing the number of replicates for each condition. 
# For example, "3,3" means the data set contains 2 conditions and each condition has 3 replicates. 
# "2,3,3" means the data set contains 3 conditions, with 2, 3, and 3 replicates for each condition respectively.

## run gene level of DE analysis by EBSeq.
rsem-run-ebseq BvsA-on-${i}.genes.counts.matrix ${DEGROUPS} BvsA-on-${i}.genes.counts.matrix.results
rsem-run-ebseq CvsA-on-${i}.genes.counts.matrix ${DEGROUPS} CvsA-on-${i}.genes.counts.matrix.results
rsem-run-ebseq BvsC-on-${i}.genes.counts.matrix ${DEGROUPS} BvsC-on-${i}.genes.counts.matrix.results

# run isoform level of DE analysis by EBSeq.
rsem-run-ebseq --ngvector EBSeq.isoform-${i}.ngvec BvsA-on-${i}.isoforms.counts.matrix ${DEGROUPS} BvsA-on-${i}.isoforms.counts.matrix.results
rsem-run-ebseq --ngvector EBSeq.isoform-${i}.ngvec CvsA-on-${i}.isoforms.counts.matrix ${DEGROUPS} CvsA-on-${i}.isoforms.counts.matrix.results
rsem-run-ebseq --ngvector EBSeq.isoform-${i}.ngvec BvsC-on-${i}.isoforms.counts.matrix ${DEGROUPS} BvsC-on-${i}.isoforms.counts.matrix.results

## rsem-control-fdr
## Find DE genes by FDR 0.05.
rsem-control-fdr BvsA-on-${i}.genes.counts.matrix.results ${FDR} BvsA-on-${i}.genes.${FDRNAME}.txt
rsem-control-fdr CvsA-on-${i}.genes.counts.matrix.results ${FDR} CvsA-on-${i}.genes.${FDRNAME}.txt
rsem-control-fdr BvsC-on-${i}.genes.counts.matrix.results ${FDR} BvsC-on-${i}.genes.${FDRNAME}.txt

## Find DE isoforms by FDR 0.05.
rsem-control-fdr BvsA-on-${i}.isoforms.counts.matrix.results ${FDR} BvsA-on-${i}.isoforms.${FDRNAME}.txt
rsem-control-fdr CvsA-on-${i}.isoforms.counts.matrix.results ${FDR} CvsA-on-${i}.isoforms.${FDRNAME}.txt
rsem-control-fdr BvsC-on-${i}.isoforms.counts.matrix.results ${FDR} BvsC-on-${i}.isoforms.${FDRNAME}.txt

done

