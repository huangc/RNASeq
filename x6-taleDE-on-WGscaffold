##. Identify the DE genes that also have TALE binding sites within the defined distance.
##------------------------------------------------------------------
## Required files and example contents
# ebseq files (results of x4-RSEM-EBseq):
# ${WORK_DIR}/run/ebseq/BvsA-on-${TARGET}.genes.${FDRNAME}.txt
# ${WORK_DIR}/run/ebseq/CvsA-on-${TARGET}.genes.${FDRNAME}.txt
# ${WORK_DIR}/run/ebseq/BvsC-on-${TARGET}.genes.${FDRNAME}.txt
# "PPEE"  "PPDE"  "PostFC"        "RealFC"        "C1Mean"        "C2Mean"
# "C1004356.gene1"        0       1       1.43416177840388        1.43432201569067        2431.05750761245        1694.91448767985
# "C1015522.gene1"        0       1       2.57885915878863        2.57963336718133        3290.82305607212        1275.68797240911

# taleBS files (results of x5-tale-on-WGscaffold):
# ${WORK_DIR}/run/tale_${runNAME}/taleAVRXA7all-on-${TARGET}.fa.txt
# options_used:search reverse complement, upstream_base = T , cutoff = 3.00, rvd_sequence = 
# NI_HG_NI_NI_NS_HD_NN_HD_HD_HD_NS_N*_HD_HD_NS_NS_NN_NN_NI_NG_NN_NI_N*_NS_N*
# Best Possible Score:9.96
# Sequence Name   Strand  Score   Start Position  Target Sequence Plus strand sequence
# C1385492        Minus   18.21   165     T ATAACAACCCACCCACAACTCACAC     GTGTGAGTTGTGGGTGGGTTGTTAT A
# scaffold20651   Minus   18.43   16250   T ATCACCACCCACACACCGATAACAT     ATGTTATCGGTGTGTGGGTGGTGAT A

# Two positive controls for RNASeq experiment
# OS11T0508600, OsSWEET14, tale score 29.95, FC = 347.4
# OS04T0268700, Eggshell protein family protein, tale score 27.06, FC = 7.7
 
##------------------------------------------------------------------
source ./RNASeq.source
##------------------------------------------------------------------
cd ${RNASeq_DIR}/run
mkdir -p taleDE
cd taleDE
cp -s ${WORK_DIR}/run/tale_${runNAME}/taleAVRXA7all-on-*.txt .
cp -s ${WORK_DIR}/run/ebseq-on-WGscaffolds/*-on-*.genes.${FDRNAME}.txt .
cp -s ${WORK_DIR}/run/gth-on-WGscaffold/gth.*-on-* .
cp -s ${WORK_DIR}/reference/rice_japonica/OsjPRT .

for i in ${TARGET}
do
##--------------------------------
## Generate the join table that contains the "associated" taleBS and DE gene if they fall into the same scaffold.
#
# Change the TAL_Target such that "T TCCTGAAGAATTGATTCACTTC" becomes "TTCCTGAAGAATTGATTCACTTC"
sed -r 's/\bT\s/T/g' taleAVRXA7all-on-${i}.fa.txt | \
awk '{ FS="\t";OFS="\t"; print $1,$2,$3,$4,$5 }' | \
grep -v "^options_used" | grep -v "^Best" | grep -v "^Sequence" > tale-on-${i}.tab

##--------------------------------
# Go through each of ?vs?-on-${TARGET}.genes.${FDRNAME}.txt
# Remove the " ", and make the "scaffoldID.geneID" into 4 columns of scaffoldID.geneID scaffoldID geneID geneNUM:
for k in ${DEexp}
do
tail -n+2 ${k}-on-${i}.genes.${FDRNAME}.txt | sed 's/"//g;' | sed 's/.gene/\tgene/g;' |\
 awk '{ FS="\t";OFS="\t"; print $1"."$2,$1,$2,$3,$4,$5,$6,$7,$8 }'|\
 sort -k1,2  > ${k}-on-${i}.genes.${FDRNAME}.tab
sed 's/\tgene/\tgene\t/;' ${k}-on-${i}.genes.${FDRNAME}.tab |\
 awk '{ FS="\t";OFS="\t"; print $1,$2,$3.$4,$4,$5,$6,$7,$8,$9,$10 }' > tmp && \mv tmp ${k}-on-${i}.genes.${FDRNAME}.tab
done
done


##------------------------------------
for i in ${TARGET}
do
# Now look into the taleBS table to find the associated taleDE
\rm -f ${k}-on-${i}.taleDE.tab
for k in ${DEexp}
do
#--
rowEB=`awk 'END { print NR }' ${k}-on-${i}.genes.${FDRNAME}.tab`
for ((m=1; m<=$rowEB; m++))
do
head -$m ${k}-on-${i}.genes.${FDRNAME}.tab | tail -1 > recEB-${k}-on-${i}
scaffoldGeneID=`cut -f1 recEB-${k}-on-${i}`
scaffoldID=`cut -f2 recEB-${k}-on-${i}`
geneID=`cut -f3 recEB-${k}-on-${i}`
geneNUM=`cut -f4 recEB-${k}-on-${i}`
PPEE=`cut -f5 recEB-${k}-on-${i}`
PPDE=`cut -f6 recEB-${k}-on-${i}`
PostFC=`cut -f7 recEB-${k}-on-${i}`
RealFC=`cut -f8 recEB-${k}-on-${i}`
C1Mean=`cut -f9 recEB-${k}-on-${i}`
C2Mean=`cut -f10 recEB-${k}-on-${i}`

#
grep "\b$scaffoldID\b" tale-on-${i}.tab > recEB_tale-${k}-on-${i}
rowEBtale=`awk 'END { print NR }' recEB_tale-${k}-on-${i}`
if [ -s recEB_tale-${k}-on-${i} ]
then
for ((p=1; p<=$rowEBtale; p++))
do
head -$p recEB_tale-${k}-on-${i} | tail -1 > recEB_talerec-${k}-on-${i}
talescaffoldID=`cut -f1 recEB_talerec-${k}-on-${i}`
taleStrand=`cut -f2 recEB_talerec-${k}-on-${i}`
taleScore=`cut -f3 recEB_talerec-${k}-on-${i}`
taleStart=`cut -f4 recEB_talerec-${k}-on-${i}`
taleTarget=`cut -f5 recEB_talerec-${k}-on-${i}`
echo "${scaffoldGeneID} ${scaffoldID} ${geneID} ${geneNUM} ${PPDE} ${PostFC} ${RealFC} ${C1Mean} ${C2Mean}\
 ${talescaffoldID} ${taleStrand} ${taleScore} ${taleStart} ${taleTarget}" >> ${k}-on-${i}.taleDE.tab
done
fi
done
#--
#
# echo "scaffoldGeneID scaffoldID geneID geneNUM PPDE PostFC RealFC C1Mean C2Mean talescaffoldID taleStrand taleScore taleStart taleTarget" |\
# cat - ${k}-on-${i}.taleDE.tab > tmp && \mv tmp ${k}-on-${i}.taleDE.tab
done
done

##----------------------------------------------------
for i in ${TARGET}
do
for k in ${DEexp}
do
## Filter for ${PostFC} > $MINFC OR ${RealFC} > $MINFC
awk -v minFC="${MINFC}" '{ FS=" "; OFS=" "; if ( $6 >= minFC || $7 >= minFC ) print }' ${k}-on-${i}.taleDE.tab\
 > ${k}-on-${i}.taleDE_flt.tab

## Filter for ${taleScore} < $MAXSCORE. Don't do this here. Instead, do filtering at x5-tale-on-WGscaffold using cutoffmult TSO_x.
# awk -v maxScore="${MAXSCORE}" '{ FS="\t"; OFS="\t"; if ( $12 <= maxScore ) print }' ${k}-on-${i}.taleDE_flt.tab\
# > ${k}-on-${i}.taleDE_fltfoo.tab

done
done

##-----------------------------------
## Annotate the taleDE table with the gth annotation
for i in ${TARGET}
do
for k in ${DEexp}
do
#--
\rm -f ${k}-on-${i}.taleDE_gth.tab
rowEB=`awk 'END { print NR }' ${k}-on-${i}.taleDE_flt.tab`
for ((m=1; m<=$rowEB; m++))
do
head -$m ${k}-on-${i}.taleDE_flt.tab | tail -1 > recEB-${k}-on-${i}
scaffoldGeneID=`cut -d" " -f1 recEB-${k}-on-${i}`
scaffoldID=`cut -d" " -f2 recEB-${k}-on-${i}`
geneID=`cut -d" " -f3 recEB-${k}-on-${i}`
geneNUM=`cut -d" " -f4 recEB-${k}-on-${i}`
PPDE=`cut -d" " -f5 recEB-${k}-on-${i}`
PostFC=`cut -d" " -f6 recEB-${k}-on-${i}`
RealFC=`cut -d" " -f7 recEB-${k}-on-${i}`
C1Mean=`cut -d" " -f8 recEB-${k}-on-${i}`
C2Mean=`cut -d" " -f9 recEB-${k}-on-${i}`
talescaffoldID=`cut -d" " -f10 recEB-${k}-on-${i}`
taleStrand=`cut -d" " -f11 recEB-${k}-on-${i}`
taleScore=`cut -d" " -f12 recEB-${k}-on-${i}`
taleStart=`cut -d" " -f13 recEB-${k}-on-${i}`
taleTarget=`cut -d" " -f14 recEB-${k}-on-${i}`

grep "\b$scaffoldID\b" gth.${GTH_PRTDB}-on-${i}.gff3 | grep "\bmRNA\b" > recGTH-${k}-on-${i}
rowGTH=`awk 'END { print NR }' recGTH-${k}-on-${i}`
if [ -s recGTH-${k}-on-${i} ]
then
for ((p=1; p<=$rowGTH; p++))
do
head -$p recGTH-${k}-on-${i} | tail -1 > recGTHrec-${k}-on-${i}
GTHscaffoldID=`cut -f1 recGTHrec-${k}-on-${i}`
GTHstart=`cut -f4 recGTHrec-${k}-on-${i}`
GTHend=`cut -f5 recGTHrec-${k}-on-${i}`
GTHstrand=`cut -f7 recGTHrec-${k}-on-${i}`
GTHattrib=`cut -f9 recGTHrec-${k}-on-${i}`
echo -e "${scaffoldGeneID}\t${scaffoldID}\t${geneID}\t${geneNUM}\t${PPDE}\t${PostFC}\t${RealFC}\t${C1Mean}\t${C2Mean}\
\t${talescaffoldID}\t${taleStrand}\t${taleScore}\t${taleStart}\t${taleTarget}\
\t${GTHscaffoldID}\t${GTHstart}\t${GTHend}\t${GTHstrand}\t${GTHattrib}\t${GTHdescrpt}" >> ${k}-on-${i}.taleDE_gth.tab
done
else
GTHscaffoldID="NA"
GTHstart="NA"
GTHend="NA"
GTHstrand="NA"
GTHattrib="NA"
echo -e "${scaffoldGeneID}\t${scaffoldID}\t${geneID}\t${geneNUM}\t${PPDE}\t${PostFC}\t${RealFC}\t${C1Mean}\t${C2Mean}\
\t${talescaffoldID}\t${taleStrand}\t${taleScore}\t${taleStart}\t${taleTarget}\
\t${GTHscaffoldID}\t${GTHstart}\t${GTHend}\t${GTHstrand}\t${GTHattrib}" >> ${k}-on-${i}.taleDE_gth.tab
fi

done
#--
done
done


##-------------------------------------
## Filter for taleDE gene that are within $TALEDIST bp of taleBS
#Note: 
# geneStart= winStart + winSize * i
# geneEnd= (winStart - 1) + winSize * i + winRemainder
# Example:
# gene1, geneNUM=1, geneStart=1, geneEnd=1000
# gene2, geneNUM=2, geneStart=1001, geneEnd=2000
# So the distance filter
# ${taleStart} < ${geneNUM}*1000+300
# ${taleStart} > (${geneNUM}-1)*1000+300
## Association of the slidingWindow annotation and the tale binding site
#                                TALEDIST        Gene        TALEDIST
# SlidingWindow Genes                |-------|xxxxxxxxxx|-------|
# tale binding site - Neg      |==|                               |==|
# SlideWindow - Pos               |==|     |==|    |==|    |==|
# Neg: $taleStart >= $geneNUM*1000+$TALEDIST OR $taleStart <= ($geneNUM-1)*1000-$TALEDIST
# Pos: $taleStart <= $geneNUM*1000+$TALEDIST AND $taleStart >= ($geneNUM-1)*1000-$TALEDIST
# (Optional) The $GTHstrand info could be used in the following way:
# If gene is at strand "+", then $taleStart <= $geneNUM*1000 AND $taleStart >= ($geneNUM-1)*1000-$TALEDIST
# if gene is at strand "-", then $taleStart <= $geneNUM*1000+$TALEDIST AND $taleStart >= ($geneNUM-1)*1000
# However, this may rely on the known genes annotated by GenomeThreader, and potentially can miss out noval genes.

## Association of the slidingWindow annotation with the gth annotation
#                    Gene1          gthDist    Gene2     gthDist     Gene3
# gth Genes       |---------|       |====|xxxxxxxxxxxxxxx|====|    |-------|
# SlideWindow - Neg             |==|                          |==|
# SlideWindow - Pos               |==|     |==|    |==|    |==|
# Neg: $GTHstart >= $geneNUM*1000 OR $GTHend <= ($geneNUM-1)*1000
# Pos: $GTHstart <= $geneNUM*1000 AND $GTHend >= ($geneNUM-1)*1000

for i in ${TARGET}
do
for k in ${DEexp}
do
## Filter for taleDE gene that are within $TALEDIST bp of taleBS
awk -v winStart="${WINSTART}" -v winSize="${WINSIZE}" -v taleDist="${TALEDIST}"\
 '{ FS="\t"; OFS="\t"; if ( $18=="+" && $13 <= ($4*winSize) && $13 >= (($4-1)*winSize-taleDist)) print }'\
  ${k}-on-${i}.taleDE_gth.tab > ${k}-on-${i}.taleDE_gth_fltfoo1.tab  
awk -v winStart="${WINSTART}" -v winSize="${WINSIZE}" -v taleDist="${TALEDIST}"\
 '{ FS="\t"; OFS="\t"; if ( $18=="-" && $13 <= ($4*winSize+taleDist) && $13 >= (($4-1)*winSize)) print }'\
  ${k}-on-${i}.taleDE_gth.tab > ${k}-on-${i}.taleDE_gth_fltfoo2.tab
awk -v winStart="${WINSTART}" -v winSize="${WINSIZE}" -v taleDist="${TALEDIST}"\
 '{ FS="\t"; OFS="\t"; if ( $18=="NA" && $13 <= ($4*winSize+taleDist) && $13 >= (($4-1)*winSize-taleDist)) print }'\
  ${k}-on-${i}.taleDE_gth.tab > ${k}-on-${i}.taleDE_gth_fltfoo3.tab
cat ${k}-on-${i}.taleDE_gth_fltfoo1.tab ${k}-on-${i}.taleDE_gth_fltfoo2.tab ${k}-on-${i}.taleDE_gth_fltfoo3.tab\
 | sort > ${k}-on-${i}.taleDE_gth_fltfoo4.tab

## Association of the slidingWindow annotation with the gth annotation
awk -v winStart="${WINSTART}" -v winSize="${WINSIZE}" -v gthDist="${GTHDIST}" '{ FS="\t"; OFS="\t"; \
 if ( ($18!="NA") && ($16-gthDist) <= ($4*winSize) && ($17+gthDist) >= (($4-1)*winSize)) print }'\
 ${k}-on-${i}.taleDE_gth_fltfoo4.tab > ${k}-on-${i}.taleDE_gth_fltfoo5.tab
awk '{ FS="\t"; OFS="\t"; if ($18=="NA") print }' ${k}-on-${i}.taleDE_gth_fltfoo4.tab > ${k}-on-${i}.taleDE_gth_fltfoo6.tab
cat ${k}-on-${i}.taleDE_gth_fltfoo5.tab ${k}-on-${i}.taleDE_gth_fltfoo6.tab\
 | sort > ${k}-on-${i}.taleDE_gth_flt.tab

## Add header
# echo -e "scaffoldGeneID\tscaffoldID\tgeneID\tgeneNUM\tPPDE\tPostFC\tRealFC\tC1Mean\tC2Mean\
# \ttalescaffoldID\ttaleStrand\ttaleScore\ttaleStart\ttaleTarget\
# \tGTHscaffoldID\tGTHstart\tGTHend\tGTHstrand\tGTHattrib" |\
#  cat - ${k}-on-${i}.taleDE_gth_flt.tab > tmp && \mv tmp ${k}-on-${i}.taleDE_gth_flt.tab

done 
done


##-------------------------------------------------
## Add more detailed description to gth annotation
# GTHattrib: ID=mRNA11901;Parent=gene11805;Target=OS09T0569800-00 1 859 +
# Find "OS04T0514150-01", use the Target to grep more details in gth.OsjPRT-on-IRBB7LR or OsjPRT
# grep "\bOS04T0514150\b" gth.OsjPRT-on-IRBB7LR | sed -n 's/.*\(".*"\).*/\1/p' returns 20 results
# When there are many matches for OS04T0514150 in gth.OsjPRT-on-IRBB7LR, the return is not a unique result.
# use OsjPRT instead. grep "\bOS04T0514150\b" OsjPRT | sed -n 's/.*\(".*"\).*/\1/p' always return unique result.
#
# Turn this grep result:
# >OS04T0514150-01 pep:novel chromosome:IRGSP-1.0:4:25681530:25687116:1 gene:OS04G0514150 transcript:OS04T0514150-01 description:
# "Note\x3dHypothetical gene., Transcript_evidence\x3dAK288552 (DDBJ, Best hit), ORF_evidence\x3dlongestORF, NIAS_FLcDNA\x3dJ090046N08,"
# into this sed result:
# "Note\x3dHypothetical gene., Transcript_evidence\x3dAK288552 (DDBJ, Best hit), ORF_evidence\x3dlongestORF, NIAS_FLcDNA\x3dJ090046N08,"
#
# Check if the intended Target such as "OS04T0514150-01" is present before doing grep, as
# in case of $GTHattrib=="NA", $GTHgeneID become "Null", and grep using $GTHgeneID become infinite loop
# Note that "-01" is used as there are cases for alternative transcribed protein annotation.
# Also there can be more than one Target gth genes, such as 
# GTHattrib: ID=mRNA24749;Parent=gene23513;Target=OS07T0125201-00 1 173 +,OS07T0126100-00 1 173 +,OS07T0126500-00 1 173 +,OS07T0127700-01 1 52 +


for i in ${TARGET}
do
for k in ${DEexp}
do
\rm -f ${k}-on-${i}.taleDE_gth_ann.tab
rowGTH=`awk 'END { print NR }' ${k}-on-${i}.taleDE_gth_flt.tab`
for ((m=1; m<=$rowGTH; m++))
do
head -$m ${k}-on-${i}.taleDE_gth_flt.tab | tail -1 > rowGTH-${i}
scaffoldGeneID=`cut -f1 rowGTH-${i}`
scaffoldID=`cut -f2 rowGTH-${i}`
geneID=`cut -f3 rowGTH-${i}`
geneNUM=`cut -f4 rowGTH-${i}`
PPDE=`cut -f5 rowGTH-${i}`
PostFC=`cut -f6 rowGTH-${i}`
RealFC=`cut -f7 rowGTH-${i}`
C1Mean=`cut -f8 rowGTH-${i}`
C2Mean=`cut -f9 rowGTH-${i}`
talescaffoldID=`cut -f10 rowGTH-${i}`
taleStrand=`cut -f11 rowGTH-${i}`
taleScore=`cut -f12 rowGTH-${i}`
taleStart=`cut -f13 rowGTH-${i}`
taleTarget=`cut -f14 rowGTH-${i}`
GTHscaffoldID=`cut -f15 rowGTH-${i}`
GTHstart=`cut -f16 rowGTH-${i}`
GTHend=`cut -f17 rowGTH-${i}`
GTHstrand=`cut -f18 rowGTH-${i}`
GTHattrib=`cut -f19 rowGTH-${i}`
#
echo $GTHattrib | sed -n 's/.*Target=\(.*\)/\1/p' |\
sed 's/,/\n/g;' | cut -d" " -f1 > GTHgeneID-${i}
if [ -s GTHgeneID-${i} ]
then
\rm -f GTHgeneIDs-${i}
\rm -f GTHdescrpts-${i}
rowGTHgene=`awk 'END { print NR }' GTHgeneID-${i}`
for ((p=1; p<=$rowGTHgene; p++))
do
GTHgeneIDs=`head -$p GTHgeneID-${i} | tail -1`
grep "\b$GTHgeneIDp\b" ${GTH_PRTDB} | sed -n 's/.*\("Note.*"\).*/\1/p' > GTHdescrpt-${i}
GTHdescrpts=`cat GTHdescrpt-${i}`
# echo -n to concatenate $GTHgeneIDs 
echo -n "${GTHgeneIDs};" >> GTHgeneIDs-${i} 
echo -n "${GTHdescrpts};" >> GTHdescrpts-${i}
done
GTHgeneID=`cat GTHgeneIDs-${i}`
GTHdescrpt=`cat GTHdescrpts-${i}`
echo -e "${scaffoldGeneID}\t${scaffoldID}\t${geneID}\t${geneNUM}\t${PPDE}\t${PostFC}\t${RealFC}\t${C1Mean}\t${C2Mean}\
\t${talescaffoldID}\t${taleStrand}\t${taleScore}\t${taleStart}\t${taleTarget}\
\t${GTHscaffoldID}\t${GTHstart}\t${GTHend}\t${GTHstrand}\t${GTHattrib}\t${GTHgeneID}\t${GTHdescrpt}" >> ${k}-on-${i}.taleDE_gth_ann.tab

else
GTHgeneID=NA
GTHdescrpt=NA
echo -e "${scaffoldGeneID}\t${scaffoldID}\t${geneID}\t${geneNUM}\t${PPDE}\t${PostFC}\t${RealFC}\t${C1Mean}\t${C2Mean}\
\t${talescaffoldID}\t${taleStrand}\t${taleScore}\t${taleStart}\t${taleTarget}\
\t${GTHscaffoldID}\t${GTHstart}\t${GTHend}\t${GTHstrand}\t${GTHattrib}\t${GTHgeneID}\t${GTHdescrpt}" >> ${k}-on-${i}.taleDE_gth_ann.tab
fi
done
done
done


##--------------------------------
## Combine DEexp experiments by writing into individual $scaffoldGeneID files
for i in ${TARGET}
do
\rm -f ${i}.taleDE_gth_exp.tab
for k in ${DEexp}
do
awk -v target="${i}" -v deexp="${k}" '{ print target"\t"deexp"\t"$0 }' ${k}-on-${i}.taleDE_gth_ann.tab > ${k}-on-${i}.taleDE_gth_DEexp.tab
cat ${k}-on-${i}.taleDE_gth_DEexp.tab >> ${i}.taleDE_gth_DEexp.tab
done 
sort -k2 ${i}.taleDE_gth_DEexp.tab > tmp && \mv tmp ${i}.taleDE_gth_DEexp.tab
## Add header
echo -e "Target\tDEexp\tscaffoldGeneID\tscaffoldID\tgeneID\tgeneNUM\tPPDE\tPostFC\tRealFC\tC1Mean\tC2Mean\
\ttalescaffoldID\ttaleStrand\ttaleScore\ttaleStart\ttaleTarget\
\tGTHscaffoldID\tGTHstart\tGTHend\tGTHstrand\tGTHattrib\tGTHgeneID\tGTHdescrpt" |\
 cat - ${i}.taleDE_gth_DEexp.tab > tmp && \mv tmp ${i}.taleDE_gth_DEexp.tab
done


## Remove tmp files
\rm -f *foo*
\rm -f recEB*
\rm -f recGTH*


